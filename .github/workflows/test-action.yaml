name: Test Cache Action

on:
  # Trigger manually from the Actions tab
  workflow_dispatch:
  # Trigger on pushes to main, but only if files relevant to the action or test change
  push:
    branches:
      - main
    paths:
      - '.github/workflows/test-cache.yaml'
      - 'action.yml'
      - 'dist/index.js'
      - 'examples/compose.yaml'

jobs:
  test-caching:
    name: Run with Docker Compose Cache Action
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Docker Compose Images using Local Action
        id: cache-docker
        # Use 'uses: ./' to run the action from the current repository checkout
        uses: ./
        with:
          # Point to the compose file within the examples directory
          compose-files: |
            examples/compose.yaml
          # Optional: Test image exclusion
          # exclude-images: |
          #   redis:7-alpine

      - name: Display Cache Information
        run: |
          echo "Action Outputs:"
          echo "  Cache Hit (All Images): ${{ steps.cache-docker.outputs.cache-hit }}"
          echo "  Image List Processed: ${{ steps.cache-docker.outputs.image-list }}"
          echo "-------------------------------------"
          echo "Current Docker Images:"
          docker images

      - name: Start Services with Docker Compose
        # Set working directory so compose finds the file
        working-directory: ./examples
        run: |
          echo "Starting Docker Compose services..."
          docker compose up -d
          echo "Services started."

      - name: Check Running Containers
        run: |
          echo "-------------------------------------"
          echo "Running Docker Containers:"
          docker ps
          echo "-------------------------------------"

      - name: Stop Services
        # Always run this step, even if previous steps fail
        if: always()
        working-directory: ./examples
        run: |
          echo "Stopping Docker Compose services..."
          docker compose down
          echo "Services stopped."
